{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","client/js/src/boot.js","client/js/src/client.js","client/js/src/game.js","client/js/src/items.js","client/js/src/main.js","client/js/src/map.js","client/js/src/player/basePlayer.js","client/js/src/player/chatwheel.js","client/js/src/player/constants.js","client/js/src/player/movement.js","client/js/src/player/player.js","client/js/src/preloader.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpfile":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nfunction Boot() {};\n\nBoot.prototype = {\n\n\tpreload: function () {\n\n\t},\n\n\tcreate: function () {\n\t\tthis.game.state.start('preloader');\n\t}\n};\n\nmodule.exports = Boot;\n","'use strict';\n\nfunction Client(game) {\n\tthis.game = game;\n\tthis.socket = null;\n\tthis.isActive = false;\n  this.debug = true;\n};\n\nClient.prototype = {\n\tcreate: function(){\n\t\t//connect to socket\n\t\t//this.socket = io.connect('http://localhost:8000');\n\t\tthis.socket = io.connect('https://cryptic-springs-1537.herokuapp.com');\n\t\tvar game = this.game;\n\t\tvar socket = this.socket;\n\t\t//add debug console\n    this.game.add.plugin(Phaser.Plugin.Debug);\n\t\t//add player\n\t\tthis.game.player.create();\n\t\tthis.game.player.sprite.visible = false;\n\t\t// socket events\n\t\tthis.socket.on('playerConnected', function(data){\n\t\t\tgame.player.id = data.id;\n\t\t\tgame.survivors = [];\n\t\t});\n\t\tthis.socket.on('playerSpawn', function(data){\n      console.log(data);\n\t\t\tgame.player.spawn(data.x, data.y,data.level);\n\t\t\tgame.player.sprite.visible = true;\n\t\t});\n    this.socket.on('playerRepawn', function(data){\n      console.log(data);\n      game.player.respawn(data.x, data.y);\n      game.player.sprite.visible = true;\n      game.win = false;\n    });\n    this.socket.on('changeLevel', function(data){\n      console.log(data);\n      game.player.level = data.level;\n\t\t\tgame.map.update(data.map);\n      socket.emit('mapUpdated');\n    });\n\t\tthis.socket.on('getMap', function(data, items){\n\t\t\tgame.map.create(data);\n      game.items.create(items);\n\t\t\tsocket.emit('mapCreated');\n\t\t});\n\t\tthis.socket.on('updatePlayers', function(data){\n\t\t\t_.each(data, function(updateSurvivor){\n\t\t\t\tif(updateSurvivor.id !== game.player.id){\n\t\t\t\t\tvar survivor = _.find(game.survivors, function(s){\n\t\t\t\t\t\treturn s.id === updateSurvivor.id;\n\t\t\t\t\t});\n\t\t\t\t\tif(!survivor){\n\t\t\t\t\t\tvar survivor = new Survivor(updateSurvivor.id, game)\n\t\t\t\t\t\tsurvivor.create(updateSurvivor.x, updateSurvivor.y,updateSurvivor.status,updateSurvivor.level);\n\t\t\t\t\t\tgame.survivors.push(survivor);\n\t\t\t\t\t}else{\n\n\t\t\t\t\t\tsurvivor.sprite.x = updateSurvivor.x;\n\t\t\t\t\t\tsurvivor.sprite.y = updateSurvivor.y;\n\t\t\t\t\t\tsurvivor.sprite.status = updateSurvivor.status;\n            survivor.sprite.status = updateSurvivor.level;\n\t\t\t\t\t}\n\t\t\t\t\tsurvivor.update();\n\t\t\t\t}\n\t\t\t})\n\n\t\t});\n\t\tthis.socket.on('removePlayer', function(id){\n\t\t\tvar player = _.remove(game.survivors, function(player) {\n\t\t\t\t//console.log(player , id);\n\t\t\t\treturn player.id === id;\n\t\t\t});\n\t\t\t//console.log('removing :' , player);\n\t\t\tif(player.length > 0)\n\t\t\t\tplayer[0].sprite.destroy();\n\t\t});\n\t},\n  loadnewMap: function(){\n    var level = this.game.player.level;\n    this.socket.emit('requestLevelChange', level);\n    //this.game.map.update(mapData);\n    //his.game.state.start('preloader');\n  },\n\tupdate: function(){\n\n\t\tif(this.game.player.isActive && this.game.player.sprite.visible){\n\t\t\t//this.isActive = false;\n\t\t\tthis.socket.emit('newPlayerPosition', {\n\t\t\t\tx: this.game.player.sprite.x,\n\t\t\t\ty: this.game.player.sprite.y,\n        status: this.game.player.status,\n        level: this.game.player.level\n\t\t\t});\n\t\t}\n\t},\n  isInt:function(n) {\n   return n % 1 === 0;\n  }\n};\n\nmodule.exports = Client;\n","var Items = require('./items');\nvar Player = require('./player/player');\nvar Map = require('./map');\nvar Client = require('./client');\n\nfunction Game() {\n\tthis.client = null;\n\tthis.player = null;\n\tthis.map = null;\n  this.win = false;\n  this.items = null;\n\tthis.survivors = [];\n\tthis.survivorGroup = null;\n}\n\nGame.prototype = {\n\tcreate: function () {\n\n    this.game.time.advancedTiming = true;\n   // console.log(this.game.time);\n    this.game.time.desiredFps = 60;\n\n\t\tthis.game.physics.startSystem(Phaser.Physics.ARCADE);\n\n    this.items = new Items(this.game, this.map, this);\n\t\tthis.player = new Player(this.game, this.map);\n    this.map = new Map(this.game,this.player, this);\n\t\tthis.client = new Client(this);\n\t\tthis.client.create();\n\n\t},\n\n\tupdate: function () {\n    //console.log(this.map.portal.x);\n    //  console.log(this.player.sprite.x  +' '+ this.map.portal.x  +' '+this.player.sprite.y +' '+ this.map.portal.y )\n    //  this.game.time.fps= 27;\n    this.game.debug.text(this.player.level || '--', 2, 14, \"#00ff00\");\n    if(this.player.sprite.x > this.map.portal.x && this.player.sprite.x < this.map.portal.x +300 && this.player.sprite.y > this.map.portal.y && this.player.sprite.y < this.map.portal.y + 300 && !this.win){\n      console.log('CELEBRATE');\n      this.win = true;\n      this.client.loadnewMap();\n\n    }\n    // if player exists\n\t\tif(this.player !== null){\n      // make player collide\n\t\t\tthis.game.physics.arcade.collide(this.player.sprite,this.map.collisionLayer);\n      // bring player sprite to top\n      this.player.sprite.bringToTop();\n      // Update the player\n\t\t\tthis.player.update();\n\t\t}\n    // if not\n    if(this.client !== null)\n      this.client.update();\n\t},\n\trender: function () {\n\t}\n};\n\nmodule.exports = Game;\n","'use strict';\n\nfunction Items(game, map, items) {\n  this.items = items;\n  this.game = game;\n\n};\nvar itemBase = {\n  create: function (data) {\n    // Log ITEMS\n //   console.log(data);\n  }\n};\n\nvar item = {};\n_.extend(item, itemBase);\n\nItems.prototype = item;\n\nmodule.exports = Items;\n","var Boot = require('./boot');\nvar Game = require('./game');\nvar Preloader = require('./preloader');\n\nwindow.onload = function () {\n\t'use strict';\n\n  window['phaser'] = {};\n  window['phaser'].Boot = Boot;\n  window['phaser'].Game = Game;\n  window['phaser'].Preloader = Preloader;\n\n\tvar game;\n\tvar ns = window['phaser'];\n\tvar h = window.outerHeight;\n\tvar w = window.outerWidth;\n\tgame = new Phaser.Game(1000,720, Phaser.AUTO, 'phaser-game');\n\tgame.state.add('boot', ns.Boot);\n\tgame.state.add('preloader', ns.Preloader);\n\tgame.state.add('game', ns.Game);\n\n\tgame.state.start('boot');\n};\n","'use strict';\n\nfunction Map(game, player, myGame) {\n\tthis.myGame = myGame;\n\tthis.player = player;\n\tthis.game = game;\n\tthis.bg = null;\n  this.maps = null;\n  this.tilemap = null;\n  this.currentMap = null;\n\tthis.tileset = null;\n\tthis.collisionLayer = null;\n  this.portal = {};\n  this.portal.x = null;\n  this.portal.y = null;\n  this.client = null;\n\n}\n\nvar mapBase = {\n\n\tcreate: function (data) {\n\t\t// Log Map infos\n\t//\tconsole.log(data + this.player.level);\n\n    this.maps = data;\n    this.setCurrentLevel(this.maps[0],'level1')\n\n\t\tthis.game.stage.backgroundColor = '#440e62';\n\t\t//load map\n\n\t\t// add player Group\n\t\tthis.myGame.survivorGroup = this.game.add.group();\n\t\tthis.myGame.survivorGroup.createMultiple(100,'dude');\n\t\t//add tilemap\n\n\n\t},\n\n\tupdate: function(data) {\n    this.maps = data;\n    var ll = this.player.level;\n    //console.log(ll);\n    this.setCurrentLevel(this.maps[ll],'level'+ll);\n\t},\n  setCurrentLevel:function(level,name){\n    console.log(name);\n     this.currentMap = level;\n\n     if(  this.collisionLayer !== null){\n        this.collisionLayer.destroy();\n      console.log('destroyed');\n     }\n\n    this.game.load.tilemap(name, null, this.currentMap, Phaser.Tilemap.TILED_JSON );\n    this.tileset = this.game.add.tilemap(name);\n\n    this.tileset.setCollisionByExclusion([ 13, 14, 15, 16, 46, 47, 48, 49, 50, 51 ]);\n    this.tileset.addTilesetImage('tiles-1');\n    //Set collisionLayer\n    this.collisionLayer = this.tileset.createLayer('Tile Layer 1');\n    this.collisionLayer.resizeWorld();\n    this.portal.x = this.currentMap.portalPosx * 16;\n    this.portal.y = this.currentMap.portalPosy * 16;\n\n\n    // console.log('//// PORTAL SPAWNED AT');\n    // console.log('//// x:' +(this.currentMap.portalPosx * 16) + 'y:'+ (this.currentMap.portalPosy * 16));\n    // console.log('starting game');\n\n\n  }\n}\n\nvar map = {};\n_.extend(map, mapBase);\n\nMap.prototype = map;\n\nmodule.exports = Map;\n","var basePlayer = {\n  create: function () {\n    // adding player sprite\n    this.sprite = this.game.add.sprite(32, this.game.world.height - 150, 'dude');\n    // adding physics\n    this.game.physics.arcade.enable(this.sprite);\n    // this.phasebooties = this.game.add.sprite(480,320,'booties');\n    // adding animations\n    this.sprite.animations.add('left', [0, 1, 2, 3], 10, true);\n    this.sprite.animations.add('right', [5, 6, 7, 8], 10, true);\n    // adding gravity and Player Velocity\n    this.game.physics.arcade.gravity.y = this.gravity;\n    this.sprite.body.maxVelocity.y = 500;\n    // Set World Boundaries and FullscreenMode\n    this.game.scale.fullScreenScaleMode = Phaser.ScaleManager.SHOW_ALL;\n    this.sprite.body.collideWorldBounds = true;\n    // make the camera follow the player\n    this.game.camera.follow(this.sprite);\n    // Set Input\n    this.cursors = this.game.input.keyboard.createCursorKeys();\n    this.jumpButton = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\n    this.greetBtn = this.game.input.keyboard.addKey(Phaser.Keyboard.H);\n    this.teleport = this.game.input.keyboard.addKey(Phaser.Keyboard.T);\n    this.fullscreen = this.game.input.keyboard.addKey(Phaser.Keyboard.F);\n    this.tron = this.game.input.keyboard.addKey(Phaser.Keyboard.R);\n    // Set Fullscreen\n    this.fullscreen.onDown.add(this.gofull, this);\n  //  this.level = 'level1';\n   },\n\n  update: function() {\n\n   this.mouseMov();\n\n  },\n  gofull: function () {\n    // toggle fullscreen\n    if (this.game.scale.isFullScreen){\n      this.game.scale.stopFullScreen();\n    } else {\n      this.game.scale.startFullScreen(false);\n    }\n  },\n  respawn: function(x, y) {\n\n    // if(this.alive){\n    //   return;\n    // }\n   // console.log(level);\n    this.alive = true;\n    this.sprite.x = x;\n    this.sprite.y = y;\n   // this.level = level;\n  },\n  spawn: function(x, y,level) {\n\n    // if(this.alive){\n    //   return;\n    // }\n   // console.log(level);\n    this.alive = true;\n    this.sprite.x = x;\n    this.sprite.y = y;\n    this.level = level;\n  }\n};\n\nmodule.exports = basePlayer;\n","'use strict';\n\nvar chatWheel = {\n\n}\n\nmodule.exports = chatWheel;\n\n","var Constants = {\n    teleport: {\n      cd: 15000,\n      rangeX: 320,\n      rangeY: 160\n    }\n};\n\nmodule.exports = Constants;\n","var movement = {\n  mouseMov: function mouseMov(){\n    // this.game.debug.spriteInfo(this.sprite, 32, 620);\n      this.isActive = true;\n    //Movement\n    if (this.moveMode === 0) {\n    //Running and Air Control\n    //Skating\n    if (this.cursors.left.isDown && this.cursors.right.isDown) {\n      this.sprite.body.acceleration.x = 0;\n    }\n    //Moving LEFT\n    else if (this.cursors.left.isDown) {\n      this.status = 'right';\n      this.moveLR(-1, this.sprite);\n      this.teleportd = -1;\n    }\n    // Moving RIGHT\n    else if (this.cursors.right.isDown) {\n      this.status = 'right';\n      this.moveLR(1, this.sprite);\n      this.teleportd = 1;\n    }\n    else if (this.cursors.up.isDown) {\n      this.teleportd = -2;\n      this.decelerate(this.sign(this.sprite.body.velocity.x),this.sprite);\n    }\n    else if (this.cursors.down.isDown) {\n      this.teleportd = 2;\n      this.decelerate(this.sign(this.sprite.body.velocity.x),this.sprite);\n    }\n    //Deceleration and Standing Still\n    else {\n      this.decelerate(this.sign(this.sprite.body.velocity.x),this.sprite);\n    }\n    //Jumping\n    //Jumping Conditional Switches\n    if (this.sprite.body.blocked.up) {\n      this.jumpReset();\n      this.wallJumpReset();\n    }\n    if (!this.jumpButton.isDown) {\n      this.jumpRelease = true;\n      if (this.jumpStop) {\n        this.jumpStop = false;\n        if (this.sprite.body.velocity.y < 0) {\n          this.sprite.body.velocity.y = 0;\n        }\n      }\n      if (this.jumpWindow) {\n        this.jumpReset();\n      }\n      if (this.sprite.body.onFloor()) {\n        this.bunnyKiller = false;\n      }\n    }\n    if (this.sprite.body.blocked.left && !this.wallJumpL && !this.jumpButton.isDown) {\n      this.wallJumpL = true;\n      this.game.time.events.remove(this.wallWindow);\n      this.wallWindow = this.game.time.events.add(this.wallJumpTime,this.wallReset,this);\n    } else if (this.sprite.body.blocked.right && !this.wallJumpR && !this.jumpButton.isDown) {\n      this.wallJumpR = true;\n      this.game.time.events.remove(this.wallWindow);\n      this.wallWindow = this.game.time.events.add(this.wallJumpTime,this.wallReset,this);\n    }\n    //Jumping Action\n    if (this.jumpButton.isDown) {\n      if ((this.sprite.body.onFloor() && !this.bunnyKiller) || this.jumpWindow) {\n         this.jump();\n      } else if (this.wallJumpL && this.jumpRelease && this.cursors.right.isDown) {\n        this.jump();\n        this.wallReset();\n        this.sprite.body.velocity.x = this.wallJumpBoost;\n      } else if (this.wallJumpR && this.jumpRelease && this.cursors.left.isDown) {\n        this.jump();\n        this.wallReset();\n        this.sprite.body.velocity.x = -this.wallJumpBoost;\n      }\n    }\n    //Teleporting\n    if (this.teleport.isDown && !this.teleportcd) {\n      this.teleportLR(this.teleportd);\n    }\n    //Switching to Tronmove\n    if (this.tron.isDown) {\n      if (!this.tronWindow && this.tronCool) {\n        this.moveMode = 1;\n        this.sprite.body.velocity.x = 0;\n        this.sprite.body.velocity.y = 0;\n        this.game.physics.arcade.gravity.y = 0;\n        this.sprite.body.maxVelocity.y = this.tronspeed;\n        this.tronWindow = true;\n        this.tronCool = false;\n        this.game.time.events.add(500,this.tronReset,this);\n        this.game.time.events.add(this.tronCd,this.tronCdReset,this);\n        this.tronleft = false;\n        this.tronright = false;\n        this.tronup = false;\n        this.trondown = false;\n      }\n    }\n    //Tronmove\n    } else if (this.moveMode = 1) {\n      //LEFT\n      if (this.cursors.left.isDown && !this.tronleft) {\n        if (!this.cursors.up.isDown && !this.cursors.down.isDown) {\n          this.sprite.body.velocity.x = -this.tronspeed;\n          this.sprite.body.velocity.y = 0;\n          this.sprite.body.acceleration.x = 0;\n          this.sprite.body.acceleration.y = 0;\n          this.tronleft = true;\n          this.tronright = false;\n          this.tronup = false;\n          this.trondown = false;\n        }\n      }\n      //RIGHT\n      else if (this.cursors.right.isDown && !this.tronright) {\n        if (!this.cursors.up.isDown && !this.cursors.down.isDown) {\n          this.sprite.body.velocity.x = this.tronspeed;\n          this.sprite.body.velocity.y = 0;\n          this.sprite.body.acceleration.x = 0;\n          this.sprite.body.acceleration.y = 0;\n          this.tronleft = false;\n          this.tronright = true;\n          this.tronup = false;\n          this.trondown = false;\n        }\n      }\n      //UP\n      else if (this.cursors.up.isDown && !this.tronup) {\n        if (!this.cursors.left.isDown && !this.cursors.right.isDown) {\n          this.sprite.body.velocity.y = -this.tronspeed;\n          this.sprite.body.velocity.x = 0;\n          this.sprite.body.acceleration.x = 0;\n          this.sprite.body.acceleration.y = 0;\n          this.tronleft = false;\n          this.tronright = false;\n          this.tronup = true;\n          this.trondown = false;\n        }\n      }\n      //DOWN\n      else if (this.cursors.down.isDown && !this.trondown) {\n        if (!this.cursors.left.isDown && !this.cursors.right.isDown) {\n          this.sprite.body.velocity.y = this.tronspeed;\n          this.sprite.body.velocity.x = 0;\n          this.sprite.body.acceleration.x = 0;\n          this.sprite.body.acceleration.y = 0;\n          this.tronleft = false;\n          this.tronright = false;\n          this.tronup = false;\n          this.trondown = true;\n        }\n      }\n      //Reverting to Normal Movement\n      if (this.tron.isDown || this.sprite.body.blocked.up || this.sprite.body.blocked.down || this.sprite.body.blocked.left || this.sprite.body.blocked.right) {\n        if (!this.tronWindow) {\n          this.moveMode = 0;\n          this.sprite.body.maxVelocity.y = 500;\n          this.sprite.body.velocity.x = 0;\n          this.sprite.body.velocity.y = 0;\n          this.game.physics.arcade.gravity.y = this.gravity;\n          this.tronWindow = true;\n          this.game.time.events.add(500,this.tronReset,this);\n        }\n      }\n    }\n  },\n  decelerate: function decelerate(sign) {\n    var body = this.sprite.body;\n    //Sliding Friction\n    if(body.onFloor() && (sign*body.velocity.x > this.groundCutoff)) {\n      body.acceleration.x = -sign*this.groundFriction;\n    }\n    //Air Resistance\n    else if (!body.onFloor() && sign*body.velocity.x > this.airCutoff) {\n      body.acceleration.x = -sign*this.airFriction;\n    }\n    //Stopping\n    else {\n      body.velocity.x = 0;\n      body.acceleration.x = 0;\n    }\n    //Animation Standing\n    if (body.onFloor) {\n      this.sprite.animations.stop();\n      this.sprite.frame = 4;\n    }\n  },\n  jump: function jump() {\n    this.bunnyKiller = true;\n    this.jumpRelease = false;\n    this.jumpStop = true;\n    this.sprite.body.velocity.y = -this.jumpSpeedBase-this.jumpSpeedBonus;\n    if (this.sprite.body.onFloor()) {\n      this.jumpSpeedBonus = (Math.abs(this.sprite.body.velocity.x))/this.jumpSpeedCoeff;\n      this.jumpWindow = true;\n      this.game.time.events.remove(this.jumpWindowTimer);\n      this.jumpWindowTimer = this.game.time.events.add(this.jumpAirtime,this.jumpReset,this);\n    }\n    else if (this.wallJumpL) {\n      this.jumpWindow = true;\n      this.jumpSpeedBonus = this.wallJumpBonus;\n      this.game.time.events.remove(this.jumpWindowTimer);\n      this.jumpWindowTimer = this.game.time.events.add(this.jumpAirtime,this.jumpReset,this);\n    }\n    else if (this.wallJumpR) {\n      this.jumpWindow = true;\n      this.jumpSpeedBonus = this.wallJumpBonus;\n      this.game.time.events.remove(this.jumpWindowTimer);\n      this.jumpWindowTimer = this.game.time.events.add(this.jumpAirtime,this.jumpReset,this);\n    }\n    //Animation Jumping\n    this.sprite.animations.stop();\n    if ( this.sprite.body.velocity.x < -20) {\n       this.sprite.frame = 3;\n    } else if ( this.sprite.body.velocity.x > 20) {\n       this.sprite.frame = 1;\n    } else {\n       this.sprite.frame = 4;\n    }\n  },\n  //Simple sign function. \"sign\" is also the parameter for multiple functions here. do not be confused though.\n  sign: function sign(x){\n    if(x < 0){\n      return -1;\n    } else {\n      return 1;\n    }\n  },\n  //Resets for various conditions, awkward but required\n  dodgeReset: function dodgeReset() {\n    this.dodgeWindow = false;\n  },\n  tronReset: function tronReset() {\n    this.tronWindow = false;\n  },\n  tronCdReset: function tronCdReset() {\n    this.tronCool = true;\n  },\n  jumpReset: function jumpReset() {\n    this.jumpWindow = false;\n    this.jumpSpeedBonus = 0;\n  },\n  wallJumpReset: function wallJumpReset() {\n    this.wallWindow = false;\n  },\n  wallReset: function wallReset() {\n    this.wallJumpL = false;\n    this.wallJumpR = false;\n  },\n  teleportReset: function teleportReset() {\n    this.teleportcd = false;\n  },\n  teleportLR: function teleporting(sign) {\n    if (Math.abs(sign) === 1) {\n      this.sprite.x = this.sprite.x + sign*this.teleportRangeX;\n    }\n    else {\n      this.sprite.y = this.sprite.y + 0.5*sign*this.teleportRangeY;\n    }\n          console.log(this.teleportRangeX);\n    this.teleportcd = true;\n    this.game.time.events.add(this.teleportCd,this.teleportReset,this);\n  },\n  moveLR: function moveLR(sign){\n    var body = this.sprite.body;\n    //Braking\n    if (sign*body.velocity.x < 0) {\n      if (body.onFloor()) {\n        body.acceleration.x = sign*this.braking;\n      } else {\n        body.acceleration.x = sign*Math.max(this.airbraking,sign*this.airbrakeHigh*body.velocity.x);\n      }\n    //Starting\n    } else if (body.onFloor && sign*body.velocity.x < this.boostWindow) {\n      body.velocity.x = sign*this.boost;\n    //Cruising\n    } else {\n      if (body.onFloor()) {\n        body.acceleration.x = sign*this.runnig;\n      } else if (sign*body.velocity.x < this.floatWindow) {\n        body.acceleration.x = sign*this.floating;\n      } else {\n        body.acceleration.x = 0;\n      }\n    }\n    //Animation\n    if (body.onFloor()) {\n      if (sign === -1) {\n        this.sprite.animations.play('left');\n      } else {\n        this.sprite.animations.play('right');\n      }\n    }\n  }\n};\n\nmodule.exports = movement;\n","var constants = require('./constants');\nvar basePlayer = require('./basePlayer');\nvar movement = require('./movement');\nvar chatWheel = require('./chatwheel');\n\n'use strict';\n\nfunction Player(game,map) {\n\tthis.map = map;\n\tthis.game = game;\n\tthis.cursors = null;\n  this.pad1 = null;\n\tthis.sprite = null;\n\tthis.status = null;\n  this.level = null;\n  // this.playerAction = null;\n  // this.playerMovement = null;\n  // this.chatWheel = null;\n\tthis.alive = false;\n\tthis.jumpButton = null;\n\tthis.dodgeWindow = false;\n\tthis.jumpStop = false;\n\tthis.jumpWindow = false;\n\tthis.bunnyKiller = false;\n  this.greetBtn = null;\n\tthis.jumpRelease = false;\n\tthis.doubleJumpCondition = false;\n  this.greeting = null;\n  this.wallJumpL = false;\n  this.wallJumpR = false;\n  this.wallWindow = false;\n\n  this.tron = null;\n  this.tronWindow = false;\n  this.teleport = null;\n  this.blocks = null;\n  this.teleportcd = false;\n  this.teleportd = 1;\n\n  this.jumpWindowTimer = null;\n  this.phasebooties = null;\n\n  this.jumpSpeedBonus = 0;\n  this.moveMode = 0;\n\n  //All the Balance\n  //General Map Data\n  this.mapSizex = 640;\n  this.tileSizex = 16;\n  this.gravity = 750;\n  //Teleport\n  this.teleportCd = constants.teleport.cd;\n  this.teleportRangeX = constants.teleport.rangeX;\n  this.teleportRangeY = constants.teleport.rangeY;\n  //Deceleration\n  this.groundFriction = 950;\n  this.airFriction = 0;\n  this.groundCutoff = 200;\n  this.airCutoff = 5;\n  //Running\n  this.braking = 1950;\n  this.airbraking = 950;\n  this.airbrakeHigh = 2;\n  this.runnig = 250;\n  this.boost = 150;\n  this.boostWindow = 100;\n  this.floating = 500;\n  this.floatWindow = 250;\n  //Jumping\n  this.jumpSpeedBase = 250;\n  this.jumpSpeedCoeff = 7;\n  this.jumpAirtime = 500;\n  this.wallJumpTime = 150;\n  this.wallJumpBoost = 350;\n  this.wallJumpBonus = 50;\n  // Tron\n  this.tronspeed = 1000;\n  this.tronleft = false;\n  this.tronright = false;\n  this.tronup = false;\n  this.trondown = false;\n  this.tronCd = 5000;\n  this.tronCool = true;\n}\n\nvar player = {};\n_.extend(player, movement);\n_.extend(player, chatWheel);\n_.extend(player, basePlayer);\n\nPlayer.prototype = player;\n\nmodule.exports = Player;\n","\n'use strict';\n\nfunction Preloader() {\n\tthis.asset = null;\n\tthis.ready = false;\n}\n\nPreloader.prototype = {\n\n\tpreload: function () {\n  \tthis.game.load.bitmapFont('carrier_command', 'assets/carrier_command.png', 'assets/carrier_command.xml');\n  \tthis.game.load.image('tiles-1', 'assets/tiles-1.png');\n  \tthis.game.load.image('hello', 'assets/hello.png');\n  \tthis.game.load.image('booties','assets/booties.png');\n\t\tthis.ready = true;\n\t\tthis.game.load.spritesheet('dude', 'assets/dude.png', 29, 29);\n\t\tthis.game.load.spritesheet('blackdude', 'assets/blackdude.png', 29, 29);\n\n\t},\n\n\tcreate: function () {\n\t//\tthis.asset.cropEnabled = false;\n\n\t},\n\n\tupdate: function () {\n\t\tif (!!this.ready) {\n\t\t\tthis.game.state.start('game');\n\t\t}\n\t},\n\n\tonLoadComplete: function () {\n\t\tthis.ready = true;\n\t}\n};\n\nmodule.exports = Preloader;\n"]}