{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","client/js/src/boot.js","client/js/src/client.js","client/js/src/enemy.js","client/js/src/game.js","client/js/src/items.js","client/js/src/main.js","client/js/src/map.js","client/js/src/player/basePlayer.js","client/js/src/player/chatwheel.js","client/js/src/player/constants.js","client/js/src/player/movement.js","client/js/src/player/player.js","client/js/src/preloader.js","client/js/src/splash.js","client/js/src/survivor.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzxrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nfunction Boot() {};\n\nBoot.prototype = {\n\n\tpreload: function () {\n\n\t},\n\n\tcreate: function () {\n\t\tthis.game.state.start('preloader');\n\t}\n};\n\nmodule.exports = Boot;\n","var Survivor = require('./survivor');\nvar Enemy = require('./enemy');\nfunction Client(game) {\n\tthis.game = game;\n\tthis.socket = null;\n\tthis.isActive = false;\n  this.debug = true;\n};\n\nClient.prototype = {\n\tcreate: function(){\n\t\t//connect to socket\n\t\tthis.socket = io.connect('http://localhost:8000');\n\t//  this.socket = io.connect('https://cryptic-springs-1537.herokuapp.com');\n\t\tvar game = this.game;\n\t\tvar socket = this.socket;\n\t\t//debug plugin\n    //this.game.add.plugin(Phaser.Plugin.Debug);\n\t\t//add player\n\t\tthis.game.player.create();\n\t\tthis.game.player.sprite.visible = false;\n\t\tthis.game.player.hitbox.visible = false;\n\t\t//socket events\n\t\tthis.socket.on('playerConnected', function(data){\n\t\t\tgame.player.id = data.id;\n\t\t\t//game.survivors = [];\n\t\t});\n\t\tthis.socket.on('playerSpawn', function(data){\n      console.log(data);\n\t\t\tgame.player.spawn(data.x, data.y,data.level);\n\t\t\tgame.player.sprite.visible = true;\n\t\t});\n    this.socket.on('playerRepawn', function(data){\n      //console.log(data);\n      game.player.respawn(data.x, data.y);\n      game.player.sprite.visible = true;\n      game.win = false;\n    });\n\n\t\tthis.socket.on('updatePlayers', function(data){\n\t\t\t_.each(data, function(updateSurvivor){\n\t\t\t\t\tif(updateSurvivor.id !== game.player.id){\n\t\t\t\t\t\tvar survivor = _.find(game.survivors, function(s){\n\t\t\t\t\t\t\treturn s.id === updateSurvivor.id;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(!survivor){\n\t\t\t\t\t\t\tvar survivor = new Survivor(updateSurvivor.id, game);\n\t\t\t\t\t\t\tsurvivor.create(updateSurvivor.x, updateSurvivor.y);\n\t\t\t\t\t\t\tgame.survivors.push(survivor);\n\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\tsurvivor.sprite.x = updateSurvivor.x;\n\t\t\t\t\t\t\tsurvivor.sprite.y = updateSurvivor.y;\n\t\t\t\t\t\t\tsurvivor.sprite.status = updateSurvivor.status;\n\t            survivor.sprite.level = updateSurvivor.level;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsurvivor.update();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t});\n\t\tthis.socket.on('removePlayer', function(id){\n\t\t\tvar player = _.remove(game.survivors, function(player) {\n\t\t\t\treturn player.id === id;\n\t\t\t});\n\t\t\tif(player.length > 0){\n\t\t\t\tplayer[0].sprite.destroy();\n\t\t\t}\n\t\t});\n\t\t// Map\n\t\tthis.socket.on('changeLevel', function(data){\n\t\t\tgame.player.level = data.level;\n\t\t\tgame.map.update(data.map);\n\t\t\tsocket.emit('mapUpdated');\n\t\t});\n\t\tthis.socket.on('getMap', function(data,items){\n\t\t\tgame.map.create(data);\n\t\t\tgame.items.create(items);\n\t\t//\tgame.enemy.create(monster);\n\t\t\tsocket.emit('mapCreated');\n\t\t});\n\t\t// Monster Events\n\t\tthis.socket.on('updateMonsters', function(data){\n\t\t//console.log(data.length);\n\t\t\tif(data.length === undefined){\n\t\t\t\tvar monster = _.find(game.monsters, function(m){\n\t\t\t\t\treturn m.id === data.id;\n\t\t\t\t});\n\t\t\t\tif(!monster){\n\t\t\t\t\tconsole.log('creating monster');\n\t\t\t\t\tvar monster = new Enemy(data.id, game);\n\t\t\t\t\tmonster.create(data.x, data.y,data.id);\n\t\t\t\t\tgame.monsters.push(monster);\n\t\t\t\t} else{\n\t\t\t\t\t//console.log(data);\n\t\t\t\t\tmonster.sprite.x = data.x;\n\t\t\t\t\tmonster.sprite.y = data.y;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t_.each(data, function(monsterData){\n\n\t\t\t\t\tvar monster = _.find(game.monsters, function(m){\n\t\t\t\t\t\treturn m.id === monsterData.id;\n\t\t\t\t\t});\n\t\t\t\t\tif(!monster){\n\t\t\t\t\t\tconsole.log('creating monster');\n\t\t\t\t\t\tvar monster = new Enemy(monsterData.id, game);\n\t\t\t\t\t\tmonster.create(monsterData.x, monsterData.y,monsterData.id);\n\t\t\t\t\t\tgame.monsters.push(monster);\n\t\t\t\t\t} else{\n\t\t\t\t\t\t//\tconsole.log(monsterData);\n\t\t\t\t\t\tmonster.sprite.x = monsterData.x;\n\t\t\t\t\t\tmonster.sprite.y = monsterData.y;\n\t\t\t\t\t}\n\t\t\t\t\t//monster.update(monsterData);\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t\tthis.socket.on('removeMonster', function(id){\n\t\t\tvar monster = _.remove(game.monsters, function(m) {\n\t\t\t\treturn m.id === id;\n\t\t\t});\n\t\t\tif(monster.length > 0){\n\t\t\t\tmonster[0].sprite.destroy();\n\t\t\t}\n\t\t});\n\t},\n  loadnewMap: function(){\n\t\t//console.log(gettingLevel);\n    var level = this.game.player.level;\n    this.socket.emit('requestLevelChange', level);\n  },\n\tupdate: function(){\n\t\tif(this.game.player.isActive && this.game.player.sprite.visible){\n\t\t\tthis.socket.emit('newPlayerPosition', {\n\t\t\t\tx: this.game.player.sprite.x,\n\t\t\t\ty: this.game.player.sprite.y,\n\t\t\t\tstatus: this.game.player.status,\n\t\t\t\tlevel: this.game.player.level\n\t\t\t});\n\t\t}\n\t},\n\tupdateMonsters: function(monster){\n\t\t//console.log(monster);\n\t\tif(this.game.player.isActive && this.game.player.sprite.visible){\n\t\t\tthis.socket.emit('monsterUpdate', {\n\t\t\t\tid: monster.id,\n\t\t\t\tx: monster.x,\n\t\t\t\ty: monster.y\n\t\t\t});\n\t\t}\n\t},\n\tmonsterKilled: function(monster){\n\t\t//console.log(monster);\n\t\tif(this.game.player.isActive && this.game.player.sprite.visible){\n\t\t\tthis.socket.emit('monsterKill', {\n\t\t\t\tid: monster.id\n\t\t\t});\n\t\t}\n\t},\n  isInt:function(n) {\n   return n % 1 === 0;\n  }\n};\n\nmodule.exports = Client;\n","'use strict';\n\nfunction Enemy(id, game) {\n  this.game = game;\n  this.id = id;\n  this.running = null;\n  this.rng01 = null;\n  this.rng02 = null;\n};\nvar enemyBase = {\n  create: function (x,y,id) {\n    //log Data\n    //console.log(data);\n    // add every monster from server\n    this.sprite = this.game.monsterGroup.getFirstDead();\n    this.sprite = this.game.add.sprite(32,48, 'enemy');\n    this.sprite.physicsType = Phaser.SPRITE;\n    this.sprite.animations.add('left', [0, 1, 2], 5, true);\n    this.sprite.animations.play('left');\n    this.sprite.x = x;\n    this.sprite.id = id;\n    this.sprite.y = y;\n    this.game.physics.arcade.enable(this.sprite);\n    this.sprite.body.collideWorldBounds = true;\n  /*  this.rng01 = Math.random();\n    this.rng02 = Math.random();\n    this.sprite.runleft = this.game.add.tween(this.sprite);\n    this.sprite.runleft\n      .to({x:  this.sprite.x + this.rng01*450+20}, this.rng02*2000+500)\n      .to({x:  this.sprite.x }, this.rng02*2000+500)\n      .to({x:  this.sprite.x + 200}, 2000)\n      .to({x:  this.sprite.x }, 2000)\n      .loop()\n      .start(); */\n    this.sprite.hitpoints = 15;\n    this.game.monsterGroup.add(this.sprite);\n  },\n  update: function(data) {\n    console.log(data);\n  }\n};\n\nvar enemies = {};\n_.extend(enemies, enemyBase);\n\nEnemy.prototype = enemies;\n\nmodule.exports = Enemy;\n","var Items = require('./items');\nvar Player = require('./player/player');\nvar Map = require('./map');\nvar Client = require('./client');\n\nfunction Game() {\n  this.client = null;\n  this.player = null;\n  this.map = null;\n  this.enemy = null;\n  this.client = null;\n  this.win = false;\n  this.items = null;\n  this.monsterGroup = null;\n  this.monsters = [];\n  this.survivors = [];\n  this.survivorGroup = null;\n  this.monsterStun = 1000;\n  this.playerStun = 200;\n  this.invulTime = 500;\n  this.vulnTime = 3000;\n}\n\nGame.prototype = {\n  create: function create() {\n    // enable frames manipulation & tracking\n    this.game.time.advancedTiming = true;\n    // enable physics\n    this.game.physics.startSystem(Phaser.Physics.ARCADE);\n    // creating game components\n    this.player = new Player(this.game, this.map);\n    this.map = new Map(this.game,this.player, this);\n    this.items = new Items(this.game,this.map,this);\n    this.client = new Client(this);\n    this.client.create();\n  },\n  update: function update() {\n    // show Level\n    this.game.debug.text(this.player.level || '', 2, 14, \"#ffffff\", { font: \"30px \"} );\n        // if player exists\n    if(this.player !== null){\n      //console.log(this.monsterGroup);\n      // make player collide\n      this.game.physics.arcade.collide(this.player.sprite,this.map.collisionLayer);\n      this.game.physics.arcade.collide(this.player.sprite,this.items.item, this.itemCollisionHandler, null, this);\n      this.game.physics.arcade.collide(this.monsterGroup,this.map.collisionLayer, this.enemyHandler,null,this);\n      this.game.physics.arcade.overlap(this.player.sprite,this.monsterGroup, this.enemyCollisionHandler, null, this);\n      this.game.physics.arcade.overlap(this.player.hitbox,this.monsterGroup, this.enemySlashingHandler, null, this);\n      // bring player sprite to top\n      this.player.sprite.bringToTop();\n      this.player.hitbox.bringToTop();\n      // Update the player\n      this.player.update();\n      //update nearby Monsters\n    }\n    //check for windcondition\n    if(this.player.sprite.x > this.map.portal.x && this.player.sprite.x < this.map.portal.x +300 && this.player.sprite.y > this.map.portal.y && this.player.sprite.y < this.map.portal.y + 300 && !this.win){\n      //console.log('CELEBRATE');\n      this.win = true;\n      this.client.loadnewMap();\n    }\n    // if client exist\n    if(this.client !== null && this.player !== null) {\n      var bits = {\n\t\t\t\tx: this.player.sprite.x,\n\t\t\t\ty: this.player.sprite.y,\n        status: this.player.status,\n        level: this.player.level\n\t\t\t};\n      this.client.update(bits);\n    }\n  },\n  enemyCollisionHandler: function enemyCollisionHandler(playerSprite, monster) {\n    if (this.player.moveMode > 0) {\n      monster.destroy();\n      this.client.monsterKilled(monster);\n    } else if (!this.player.invul) {\n      if (!this.player.vuln) {\n        this.player.vuln = true;\n        this.player.invul = true;\n        console.log('OUCH!');\n        console.log(this.time.events);\n        this.player.invulTimer = this.game.time.events.add(this.invulTime, function(){this.player.invul = false; console.log('invul complete');},this);\n        this.player.vulnTimer = this.game.time.events.add(this.vulnTime, function(){this.player.vuln = false; console.log('vuln complete');},this);\n        console.log(this.time.events);\n        this.player.sprite.body.velocity.x = Math.random()*1200-600;\n        this.player.sprite.body.velocity.y = -Math.random()*600;\n      } else {\n        var X = this.map.maps[0].layers[0].height*16;\n        var Y = this.map.maps[0].layers[0].width*16;\n        var PosX = Math.floor(Math.random()*(X-32));\n        var PosY = Math.floor(Math.random()*(Y-32));\n        console.log('Respawn '+PosX+' '+PosY);\n        this.player.sprite.x = PosX;\n        this.player.sprite.x = PosX;\n        console.log('Respawned');\n      }\n    }\n  },\n  enemySlashingHandler: function enemySlashingHandler(playerHitbox, monster) {\n    if (this.player.slashing) {\n      if (monster.hitpoints > 7) {\n        monster.hitpoints = monster.hitpoints - 7;\n        monster.body.velocity.x = Math.random()*1200-600;\n        monster.body.velocity.y = -Math.random()*600;\n      /*  monster.runleft.pause();\n        this.game.time.events.remove(monster.stunTimer);\n        monster.stunTimer = this.game.time.events.add(this.monsterStun,function(){this.monsterReset(monster)},this); */\n      } else {\n        monster.destroy();\n        this.client.monsterKilled(monster);\n      }\n      this.player.slashing = false;\n    }\n  },\n  itemCollisionHandler: function itemCollisionHandler(playerSprite, item) {\n    item.destroy();\n    this.player.sprite.y = this.player.sprite.y - 20;\n    this.player.sprite.body.velocity.x = 0;\n    this.player.sprite.body.velocity.y = 0;\n    this.player.sprite.body.acceleration.x = 0;\n    this.player.sprite.body.acceleration.y = 0;\n    this.player.sprite.body.allowGravity = false;\n    this.player.moveMode = 1;\n  },\n  enemyHandler: function enemyHandler(monster,map) {\n  //  console.log(monster);\n    //  console.log('checking');\n  //  this.client.updateMonsters(monster);\n  },\n  graceReset: function graceReset() {\n    this.player.vuln = true;\n  },\n  monsterReset: function monsterReset(monster) {\n      monster.runleft = this.game.add.tween(monster);\n      this.rng01 = Math.random();\n      this.rng02 = Math.random();\n      monster.runleft\n          .to({x:monster.x + this.rng01*450+20}, this.rng02*2000+500)\n          .to({x:monster.x }, this.rng02*2000+500)\n          .loop()\n          .start();\n      //this.client.updateMonsters(monster);\n    }\n};\n\nmodule.exports = Game;\n","'use strict';\n\nfunction Items(game, map, items) {\n  this.items = items;\n  this.game = game;\n\n};\nvar itemBase = {\n  create: function (data) {\n  //  Log ITEMS\n   //console.log(data);\n   this.item = this.game.add.sprite(600, 600, 'item');\n   this.game.physics.arcade.enable(this.item);\n   this.item.body.collideWorldBounds = true;\n  }\n};\n\nvar item = {};\n_.extend(item, itemBase);\n\nItems.prototype = item;\n\nmodule.exports = Items;\n","var Boot = require('./boot');\nvar Preloader = require('./preloader');\nvar Splash = require('./splash');\nvar Game = require('./game');\n\nwindow.onload = function () {\n\t'use strict';\n\n  window['phaser'] = {};\n  window['phaser'].Boot = Boot;\n\twindow['phaser'].Preloader = Preloader;\n\twindow['phaser'].Splash = Splash;\n  window['phaser'].Game = Game;\n\n\n\tvar game;\n\tvar ns = window['phaser'];\n\tgame = new Phaser.Game(1024,640, Phaser.AUTO, 'phaser-game');\n\tgame.state.add('boot', ns.Boot);\n\tgame.state.add('game', ns.Game);\n\tgame.state.add('preloader', ns.Preloader);\n\tgame.state.add('splash', ns.Splash);\n\n\n\tgame.state.start('boot');\n};\n","'use strict';\n\nfunction Map(game, player, myGame) {\n\tthis.myGame = myGame;\n\tthis.player = player;\n\tthis.game = game;\n\tthis.bg = null;\n  this.maps = null;\n  this.tilemap = null;\n  this.currentMap = null;\n\tthis.tileset = null;\n\tthis.collisionLayer = null;\n  this.portal = {};\n  this.portal.x = null;\n  this.portal.y = null;\n  this.client = null;\n}\n\nvar mapBase = {\n\n\tcreate: function (data) {\n\t\t// Log Map infos\n\t\t//\tconsole.log(data + this.player.level);\n    this.maps = data;\n    this.setCurrentLevel(this.maps[0],'level1')\n\t\t// set background color\n\t\tthis.game.stage.backgroundColor = '#333333';\n\t\t//this.game.stage.smoothed = false;\n\t\t// add player group\n\t\tthis.myGame.monsterGroup = this.game.add.group();\n\t\tthis.myGame.survivorGroup = this.game.add.group();\n\t//\tthis.myGame.survivorGroup.createMultiple(100,'player');\n\t},\n\tupdate: function(data) {\n    this.maps = data;\n    var ll = this.player.level;\n    console.log(ll);\n    this.setCurrentLevel(this.maps[ll],'level'+ll);\n\t},\n  setCurrentLevel:function(level,name){\n\t\tconsole.log(level);\n    this.currentMap = level;\n    if(this.collisionLayer !== null){\n      this.collisionLayer.destroy();\n    \tconsole.log('destroyed');\n    }\n    this.game.load.tilemap(name, null, this.currentMap, Phaser.Tilemap.TILED_JSON );\n    this.tileset = this.game.add.tilemap(name);\n\t\t//set collision\n    this.tileset.setCollisionByExclusion([ 13, 14, 15, 16, 46, 47, 48, 49, 50, 51 ]);\n    this.tileset.addTilesetImage('tiles-1');\n    //set collisionLayer\n    this.collisionLayer = this.tileset.createLayer('Tile Layer 1');\n\t\tthis.collisionLayer.renderSettings.enableScrollDelta = true;\n    this.collisionLayer.resizeWorld();\n    this.portal.x = level.portalPosX * 16;\n    this.portal.y = level.portalPosY * 16;\n    console.log('//// PORTAL SPAWNED AT');\n    console.log('//// x:' +  this.portal.x + 'y:'+ this.portal.y);\n    console.log('starting game');\n  }\n}\n\nvar map = {};\n_.extend(map, mapBase);\n\nMap.prototype = map;\n\nmodule.exports = Map;\n","var basePlayer = {\n  create: function () {\n    // adding player sprite\n    this.sprite = this.game.add.sprite(32, this.game.world.height - 150, 'player');\n    this.hitbox = this.game.add.sprite(32, this.game.world.height - 150, 'hitbox');\n    // adding physics\n    this.game.physics.arcade.enable(this.sprite);\n    this.game.physics.arcade.enable(this.hitbox);\n    this.hitbox.body.allowGravity = false;\n    // adding animations\n    this.sprite.animations.add('left', [14, 15, 16, 17], 10, true);\n    this.sprite.animations.add('right', [8, 9, 10, 11], 10, true);\n    // adding gravity and Player Velocity\n    this.game.physics.arcade.gravity.y = this.gravity;\n    this.sprite.body.maxVelocity.y = 500;\n\n    this.sprite.body.collideWorldBounds = true;\n    // make the camera follow the player\n    this.game.camera.follow(this.sprite,Phaser.FOLLOW_PLATFORMER);\n    this.cursors = this.game.input.keyboard.createCursorKeys();\n   this.jumpButton = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\n   this.greetBtn = this.game.input.keyboard.addKey(Phaser.Keyboard.H);\n   this.teleport = this.game.input.keyboard.addKey(Phaser.Keyboard.T);\n   this.fullscreen = this.game.input.keyboard.addKey(Phaser.Keyboard.F);\n   this.tron = this.game.input.keyboard.addKey(Phaser.Keyboard.R);\n   this.slash = this.game.input.keyboard.addKey(Phaser.Keyboard.S);\n   this.game.scale.fullScreenScaleMode = Phaser.ScaleManager.SHOW_ALL;\n\n   // Set Fullscreen\n   this.fullscreen.onDown.add(this.gofull, this);\n   },\n  update: function() {\n    // populate bit Array TEST\n    this.mouseMov();\n  },\n  gofull: function () {\n    // toggle fullscreen\n    if (this.game.scale.isFullScreen){\n      this.game.scale.stopFullScreen();\n    } else {\n      this.game.scale.startFullScreen(false);\n    }\n  },\n  respawn: function(x, y) {\n    this.alive = true;\n    this.sprite.x = 0;//x;\n    this.sprite.y = 0//y;\n  },\n  spawn: function(x, y,level) {\n    this.alive = true;\n    this.sprite.x = x;\n    this.sprite.y = y;\n    this.level = level;\n  }\n};\n\nmodule.exports = basePlayer;\n","'use strict';\n\nvar chatWheel = {\n\n}\n\nmodule.exports = chatWheel;\n\n","var Constants = {\n    teleport: {\n      cd: 15000,\n      rangeX: 320,\n      rangeY: 160\n    }\n};\n\nmodule.exports = Constants;\n","var movement = {\n  mouseMov: function mouseMov() {\n   // this.game.debug.spriteInfo(this.sprite, 32, 620);\n     this.isActive = true;\n   //Movement\n   if (this.moveMode === 0) {\n     //Running\n     this.basicRunning();\n     //Jumping\n     this.jumpCond();\n     if (this.jumpButton.isDown) {\n       this.jumpy();\n     }\n     //Teleporting\n     if (this.teleport.isDown && !this.teleportcd) {\n       this.teleportLR(this.direction);\n     }\n     //Switching to Tronmove\n     if (this.tron.isDown) {\n       if (!this.tronWindow && this.tronCool) {\n         this.switchToTron();\n       }\n     }\n     //Attacking\n     //Slash\n     this.slashingDirection();\n     if (this.slash.isDown) {\n       if (!this.slashed) {\n         this.slashat();\n         this.slashed = true;\n       }\n     } else {\n       this.slashed = false;\n     }\n   //Tronmove\n   } else if (this.moveMode = 1) {\n     this.tronMove();\n     //Reverting to Normal Movement\n     if (this.tron.isDown  || this.sprite.body.blocked.up\n                           || this.sprite.body.blocked.down\n                           || this.sprite.body.blocked.left\n                           || this.sprite.body.blocked.right) {\n       if (!this.tronWindow) {\n         this.switchToNormal();\n       }\n     }\n   }\n },\n basicRunning: function basicRunning() {\n   // populate bit Array TEST\n   if (this.cursors.left.isDown && this.cursors.right.isDown) {\n      this.sprite.body.acceleration.x = 0;\n    //Looking UP/RIGHT\n    } else if (this.cursors.right.isDown && this.cursors.up.isDown) {\n      this.status = 'right';\n      this.moveLR(1, this.sprite);\n      this.direction = 2;\n    //Looking UP/LEFT\n    } else if (this.cursors.left.isDown && this.cursors.up.isDown) {\n      this.status = 'left';\n      this.moveLR(-1, this.sprite);\n      this.direction = 4;\n    //Looking DOWN/LEFT\n    } else if (this.cursors.left.isDown && this.cursors.down.isDown) {\n      this.status = 'left';\n      this.moveLR(-1, this.sprite);\n      this.direction = 6;\n    //Looking DOWN/RIGHT\n    } else if (this.cursors.right.isDown && this.cursors.down.isDown) {\n      this.status = 'right';\n      this.moveLR(1, this.sprite);\n      this.direction = 8;\n    //Looking RIGHT\n    } else if (this.cursors.right.isDown) {\n      this.status = 'right';\n      this.moveLR(1, this.sprite);\n      this.direction = 1;\n    //Looking UP\n    } else if (this.cursors.up.isDown) {\n      this.direction = 3;\n      this.decelerate(this.sign(this.sprite.body.velocity.x),this.sprite);\n    //Looking LEFT\n    } else if (this.cursors.left.isDown) {\n      this.status = 'left';\n      this.moveLR(-1, this.sprite);\n      this.direction = 5;\n    //Looking DOWN\n    } else if (this.cursors.down.isDown) {\n      this.direction = 7;\n      this.decelerate(this.sign(this.sprite.body.velocity.x),this.sprite);\n    //Deceleration and Standing Still\n    } else {\n      this.decelerate(this.sign(this.sprite.body.velocity.x),this.sprite);\n    }\n  },\n decelerate: function decelerate(sign) {\n   var body = this.sprite.body;\n   //Sliding Friction\n   if(body.onFloor() && (sign*body.velocity.x > this.groundCutoff)) {\n     body.acceleration.x = -sign*this.groundFriction;\n   }\n   //Air Resistance\n   else if (!body.onFloor() && sign*body.velocity.x > this.airCutoff) {\n     body.acceleration.x = -sign*this.airFriction;\n   }\n   //Stopping\n   else {\n     body.velocity.x = 0;\n     body.acceleration.x = 0;\n   }\n   //Animation Standing\n   if (body.onFloor) {\n     this.sprite.animations.stop();\n     this.sprite.frame = 0;\n   }\n },\n jumpCond: function jumpCond() {\n   if (this.sprite.body.blocked.up) {\n     this.jumpWindow = false;\n     this.jumpSpeedBonus = 0;\n     this.wallWindow = false;\n   }\n   if (!this.jumpButton.isDown) {\n     this.jumpRelease = true;\n     if (this.jumpStop) {\n       this.jumpStop = false;\n       if (this.sprite.body.velocity.y < 0) {\n         this.sprite.body.velocity.y = 0;\n       }\n     }\n     if (this.jumpWindow) {\n       this.jumpWindow = false;\n       this.jumpSpeedBonus = 0;\n     }\n     if (this.sprite.body.onFloor()) {\n       this.bunnyKiller = false;\n     }\n   }\n   if (this.sprite.body.blocked.left && !this.wallJumpL && !this.jumpButton.isDown) {\n     this.wallJumpL = true;\n     this.game.time.events.remove(this.wallWindow);\n     this.wallWindow = this.game.time.events.add(this.wallJumpTime,function(){this.wallJumpL = false;this.wallJumpR = false;},this);\n   } else if (this.sprite.body.blocked.right && !this.wallJumpR && !this.jumpButton.isDown) {\n     this.wallJumpR = true;\n     this.game.time.events.remove(this.wallWindow);\n     this.wallWindow = this.game.time.events.add(this.wallJumpTime,function(){this.wallJumpL = false;this.wallJumpR = false;},this);\n   }\n },\n jumpy: function jumpy() {\n   if ((this.sprite.body.onFloor() && !this.bunnyKiller) || this.jumpWindow) {\n      this.jump();\n   } else if (this.wallJumpL && this.jumpRelease && this.cursors.right.isDown) {\n     this.jump();\n     this.wallJumpL = false;\n     this.wallJumpR = false;\n     this.sprite.body.velocity.x = this.wallJumpBoost;\n   } else if (this.wallJumpR && this.jumpRelease && this.cursors.left.isDown) {\n     this.jump();\n     this.wallJumpL = false;\n     this.wallJumpR = false;\n     this.sprite.body.velocity.x = -this.wallJumpBoost;\n   }\n },\n jump: function jump() {\n   this.bunnyKiller = true;\n   this.jumpRelease = false;\n   this.jumpStop = true;\n   this.sprite.body.velocity.y = -this.jumpSpeedBase-this.jumpSpeedBonus;\n   if (this.sprite.body.onFloor()) {\n     this.jumpSpeedBonus = (Math.abs(this.sprite.body.velocity.x))/this.jumpSpeedCoeff;\n     this.jumpWindow = true;\n     this.game.time.events.remove(this.jumpWindowTimer);\n     this.jumpWindowTimer = this.game.time.events.add(this.jumpAirtime,function(){this.jumpWindow = false;this.jumpSpeedBonus = 0;},this);\n   }\n   else if (this.wallJumpL) {\n     this.jumpWindow = true;\n     this.jumpSpeedBonus = this.wallJumpBonus;\n     this.game.time.events.remove(this.jumpWindowTimer);\n     this.jumpWindowTimer = this.game.time.events.add(this.jumpAirtime,function(){this.jumpWindow = false;this.jumpSpeedBonus = 0;},this);\n   }\n   else if (this.wallJumpR) {\n     this.jumpWindow = true;\n     this.jumpSpeedBonus = this.wallJumpBonus;\n     this.game.time.events.remove(this.jumpWindowTimer);\n     this.jumpWindowTimer = this.game.time.events.add(this.jumpAirtime,function(){this.jumpWindow = false;this.jumpSpeedBonus = 0;},this);\n   }\n   //Animation Jumping\n   this.sprite.animations.stop();\n   if ( this.sprite.body.velocity.x < -20) {\n      this.sprite.frame = 13;\n   } else if ( this.sprite.body.velocity.x > 20) {\n      this.sprite.frame = 7;\n   } else {\n      this.sprite.frame = 2;\n   }\n },\n teleportLR: function teleportLR(z) {\n   if (z === 1) {\n     this.sprite.x = this.sprite.x + this.teleportRangeX;\n   } else if (z === 2){\n     this.sprite.y = this.sprite.y - Math.floor(this.teleportRangeY/1.5);\n     this.sprite.x = this.sprite.x + Math.floor(this.teleportRangeX/1.5);\n   } else if (z === 3){\n     this.sprite.y = this.sprite.y - Math.floor(this.teleportRangeY);\n   } else if (z === 4){\n     this.sprite.y = this.sprite.y - Math.floor(this.teleportRangeY/1.5);\n     this.sprite.x = this.sprite.x - Math.floor(this.teleportRangeX/1.5);\n   } else if (z === 5){\n     this.sprite.x = this.sprite.x - Math.floor(this.teleportRangeX);\n   } else if (z === 6){\n     this.sprite.y = this.sprite.y + Math.floor(this.teleportRangeY/1.5);\n     this.sprite.x = this.sprite.x - Math.floor(this.teleportRangeX/1.5);\n   } else if (z === 7){\n     this.sprite.y = this.sprite.y + Math.floor(this.teleportRangeY);\n   } else {\n     this.sprite.y = this.sprite.y + Math.floor(this.teleportRangeY/1.5);\n     this.sprite.x = this.sprite.x + Math.floor(this.teleportRangeX/1.5);\n   }\n   this.teleportcd = true;\n   this.game.time.events.add(this.teleportCd,function(){this.teleportcd = false;},this);\n },\n moveLR: function moveLR(sign){\n   var body = this.sprite.body;\n   //Braking\n   if (sign*body.velocity.x < 0) {\n     if (body.onFloor()) {\n       body.acceleration.x = sign*this.braking;\n     } else {\n       body.acceleration.x = sign*Math.max(this.airbraking,sign*this.airbrakeHigh*body.velocity.x);\n     }\n   //Starting\n   } else if (body.onFloor && sign*body.velocity.x < this.boostWindow) {\n     body.velocity.x = sign*this.boost;\n   //Cruising\n   } else {\n     if (body.onFloor()) {\n       body.acceleration.x = sign*this.runnig;\n     } else if (sign*body.velocity.x < this.floatWindow) {\n       body.acceleration.x = sign*this.floating;\n     } else {\n       body.acceleration.x = 0;\n     }\n   }\n   //Animation\n   if (body.onFloor()) {\n     if (sign === -1) {\n       this.sprite.animations.play('left');\n     } else {\n       this.sprite.animations.play('right');\n     }\n   }\n },\n //Simple sign function. \"sign\" is also the parameter for multiple functions here. do not be confused though.\n sign: function sign(x){\n   if(x < 0){\n     return -1;\n   } else {\n     return 1;\n   }\n },\n slashat: function slashat() {\n   this.hitbox.visible = true;\n   this.slashing = true;\n   this.game.time.events.remove(this.slashTimer);\n   this.slashTimer = this.game.time.events.add(this.slashTime,function(){this.hitbox.visible = false;this.slashing = false;},this);\n },\n slashingDirection: function slashingDirection() {\n   if (this.direction == 1) {\n     this.hitbox.x = this.sprite.x + 27;\n     this.hitbox.y = this.sprite.y - 3;\n   } else if (this.direction == 2) {\n     this.hitbox.x = this.sprite.x + 27;\n     this.hitbox.y = this.sprite.y - 30;\n   } else if (this.direction == 3) {\n     this.hitbox.x = this.sprite.x - 1;\n     this.hitbox.y = this.sprite.y - 30;\n   } else if (this.direction == 4) {\n     this.hitbox.x = this.sprite.x - 30;\n     this.hitbox.y = this.sprite.y - 30;\n   } else if (this.direction == 5) {\n     this.hitbox.x = this.sprite.x - 30;\n     this.hitbox.y = this.sprite.y - 3;\n   } else if (this.direction == 6) {\n     this.hitbox.x = this.sprite.x - 30;\n     this.hitbox.y = this.sprite.y + 30;\n   } else if (this.direction == 7) {\n     this.hitbox.x = this.sprite.x - 1;\n     this.hitbox.y = this.sprite.y + 31;\n   } else {\n     this.hitbox.x = this.sprite.x + 27;\n     this.hitbox.y = this.sprite.y + 31;\n   }\n },\n switchToNormal: function switchToNormal() {\n   this.moveMode = 0;\n   this.sprite.body.maxVelocity.y = 500;\n   this.sprite.body.velocity.x = 0;\n   this.sprite.body.velocity.y = 0;\n   this.sprite.body.allowGravity = true;\n   this.tronWindow = true;\n   this.game.time.events.add(500,function(){this.tronWindow = false;},this);\n },\n switchToTron: function switchToTron() {\n   this.sprite.y = this.sprite.y - 16;\n   this.moveMode = 1;\n   this.sprite.body.velocity.x = 0;\n   this.sprite.body.velocity.y = 0;\n   this.sprite.body.acceleration.x = 0;\n   this.sprite.body.acceleration.y = 0;\n   this.sprite.body.allowGravity = false;\n   this.sprite.body.maxVelocity.y = this.tronspeed;\n   this.tronWindow = true;\n   this.tronCool = false;\n   this.game.time.events.add(500,function(){this.tronWindow = false;},this);\n   this.game.time.events.add(this.tronCd,function(){this.tronCool = true;},this);\n   this.tronleft = false;\n   this.tronright = false;\n   this.tronup = false;\n   this.trondown = false;\n },\n tronMove: function tronMove() {\n   //LEFT\n   if (this.cursors.left.isDown && !this.tronleft) {\n     if (!this.cursors.up.isDown && !this.cursors.down.isDown) {\n       this.tronMoveL();\n     }\n   }\n   //RIGHT\n   else if (this.cursors.right.isDown && !this.tronright) {\n     if (!this.cursors.up.isDown && !this.cursors.down.isDown) {\n       this.tronMoveR();\n     }\n   }\n   //UP\n   else if (this.cursors.up.isDown && !this.tronup) {\n     if (!this.cursors.left.isDown && !this.cursors.right.isDown) {\n       this.tronMoveU();\n     }\n   }\n   //DOWN\n   else if (this.cursors.down.isDown && !this.trondown) {\n     if (!this.cursors.left.isDown && !this.cursors.right.isDown) {\n       this.tronMoveD();\n     }\n   }\n },\n tronMoveL: function tronMoveL() {\n   this.sprite.frame = 6;\n   this.sprite.body.velocity.x = -this.tronspeed;\n   this.sprite.body.velocity.y = 0;\n   this.sprite.body.acceleration.x = 0;\n   this.sprite.body.acceleration.y = 0;\n   this.tronleft = true;\n   this.tronright = false;\n   this.tronup = false;\n   this.trondown = false;\n },\n tronMoveR: function tronMoveR() {\n   this.sprite.frame = 5;\n   this.sprite.body.velocity.x = this.tronspeed;\n   this.sprite.body.velocity.y = 0;\n   this.sprite.body.acceleration.x = 0;\n   this.sprite.body.acceleration.y = 0;\n   this.tronleft = false;\n   this.tronright = true;\n   this.tronup = false;\n   this.trondown = false;\n },\n tronMoveU: function tronMoveU() {\n   this.sprite.frame = 3;\n   this.sprite.body.velocity.y = -this.tronspeed;\n   this.sprite.body.velocity.x = 0;\n   this.sprite.body.acceleration.x = 0;\n   this.sprite.body.acceleration.y = 0;\n   this.tronleft = false;\n   this.tronright = false;\n   this.tronup = true;\n   this.trondown = false;\n },\n tronMoveD: function tronMoveD() {\n   this.sprite.frame = 4;\n   this.sprite.body.velocity.y = this.tronspeed;\n   this.sprite.body.velocity.x = 0;\n   this.sprite.body.acceleration.x = 0;\n   this.sprite.body.acceleration.y = 0;\n   this.tronleft = false;\n   this.tronright = false;\n   this.tronup = false;\n   this.trondown = true;\n }\n};\nmodule.exports = movement;\n","var constants = require('./constants');\nvar basePlayer = require('./basePlayer');\nvar movement = require('./movement');\nvar chatWheel = require('./chatwheel');\n\n'use strict';\n\nfunction Player(game,map) {\n  this.map = map;\n    this.game = game;\n    // input\n    this.cursors = null;\n    //player\n    this.sprite = null;\n    this.hitbox = null;\n    this.status = null;\n    this.level = null;\n    // this.playerAction = null;\n    // this.playerMovement = null;\n    // this.chatWheel = null;\n    this.alive = false;\n    this.jumpButton = null;\n    this.jumpStop = false;\n    this.jumpWindow = false;\n    this.bunnyKiller = false;\n    this.greetBtn = null;\n    this.jumpRelease = false;\n    this.doubleJumpCondition = false;\n    this.greeting = null;\n    this.wallJumpL = false;\n    this.wallJumpR = false;\n    this.wallWindow = false;\n    this.tron = null;\n    this.tronWindow = false;\n    this.teleport = null;\n    this.blocks = null;\n    this.teleportcd = false;\n    this.direction = 1;\n    this.slash = null;\n    this.slashed = false;\n    this.slashing = false;\n    this.slashTimer = null;\n    this.vuln = false;\n    this.invul = false;\n    this.vulnTime = 3000;\n    this.invultime = 500;\n    this.slashTime = 120;\n\n    this.jumpWindowTimer = null;\n    this.phasebooties = null;\n\n    this.jumpSpeedBonus = 0;\n    this.moveMode = 0;\n    //All the Balance\n    //General Map Data\n    this.mapSizex = 640;\n    this.tileSizex = 16;\n    this.gravity = 750;\n    //Teleport\n    this.teleportCd = 15000;\n    this.teleportRangeX = 320;\n    this.teleportRangeY = 160;\n    //Deceleration\n    this.groundFriction = 950;\n    this.airFriction = 0;\n    this.groundCutoff = 200;\n    this.airCutoff = 5;\n    //Running\n    this.braking = 1950;\n    this.airbraking = 950;\n    this.airbrakeHigh = 2;\n    this.runnig = 250;\n    this.boost = 150;\n    this.boostWindow = 100;\n    this.floating = 500;\n    this.floatWindow = 250;\n    //Jumping\n    this.jumpSpeedBase = 250;\n    this.jumpSpeedCoeff = 7;\n    this.jumpAirtime = 500;\n    this.wallJumpTime = 150;\n    this.wallJumpBoost = 350;\n    this.wallJumpBonus = 50;\n    // Tron\n    this.tronspeed = 1000;\n    this.tronleft = false;\n    this.tronright = false;\n    this.tronup = false;\n    this.trondown = false;\n    this.tronCd = 5000;\n    this.tronCool = true;\n}\n\nvar player = {};\n_.extend(player, movement);\n_.extend(player, chatWheel);\n_.extend(player, basePlayer);\n\nPlayer.prototype = player;\n\nmodule.exports = Player;\n","\n'use strict';\n\nfunction Preloader() {\n  this.ready = false;\n}\n\nPreloader.prototype = {\n\n  preload: function () {\n    this.game.load.image('tiles-1', 'assets/tiles-1.png');\n    this.game.load.image('item', 'assets/item.png');\n    this.game.load.spritesheet('hitbox', 'assets/slashhitbox.png', 32, 32);\n    this.game.load.spritesheet('player', 'assets/player.png', 29, 29);\n    this.game.load.spritesheet('enemy', 'assets/enemy.png', 64, 48);\n    this.game.load.spritesheet('blackdude', 'assets/blackdude.png', 29, 29);\n    this.game.load.image('logo', 'assets/title.png');\n    this.ready = true;\n  },\n  update: function () {\n    if (!!this.ready) {\n      this.game.state.start('splash');\n    }\n  }\n};\n\nmodule.exports = Preloader;\n","\n'use strict';\n\nfunction Splash() {\n\n}\n\nSplash.prototype = {\n\n  create: function () {\n    this.stage.backgroundColor = 0xFFFFFF;\n\n    this.logo = this.add.sprite(this.world.centerX, this.world.centerY, 'logo');\n    this.logo.smoothed = true;\n    this.logo.anchor.set(0.5, 0.5);\n    //this.logo.scale.set(0.5);\n    this.logo.alpha = 0;\n\n    this.createTween();\n  },\n  createTween() {\n      var logoTween = this.add.tween(this.logo).to({alpha: 1}, 1000,\n          Phaser.Easing.Cubic.In, true, 0, 0, true);\n\n      logoTween.onComplete.add(startGame,this);\n      function startGame(){\n        this.game.state.start('game');\n      }\n  }\n};\n\nmodule.exports = Splash;\n","'use strict';\n\nfunction Survivor(id, game) {\n\tthis.id = id;\n\tthis.game = game;\n\tthis.sprite = null;\n};\n\nSurvivor.prototype = {\n\n\tcreate: function (x, y) {\n\t\tthis.sprite = this.game.survivorGroup.getFirstDead();\n\t\tthis.sprite = this.game.add.sprite(32, this.game.world.height - 150, 'blackdude');\n\t  \tthis.sprite.animations.add('left', [0, 1, 2, 3], 10, true);\n    \tthis.sprite.animations.add('right', [5, 6, 7, 8], 10, true);\n\t\tthis.sprite.reset(x, y);\n\t\tthis.game.survivors.push(this);\n\t},\n\tupdate: function() {\n\t//\tconsole.log(this.sprite.status);\n\t\tif(this.sprite.status === 'left'){\n\t\t\tthis.sprite.animations.play('left');\n\t\t}\n\t\telse if(this.sprite.status === 'right'){\n\t\t\tthis.sprite.animations.play('right');\n\t\t}\n\t\telse if(this.sprite.status === null){\n\t\t  this.sprite.animations.stop();\n      this.sprite.frame = 4;\n\t\t}\n\n\t}\n};\n\nmodule.exports = Survivor;\n"]}